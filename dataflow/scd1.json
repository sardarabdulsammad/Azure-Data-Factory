{
	"name": "scd1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sourceEMP",
					"description": "Import data from SourceEmployee"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "target"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "maxsk"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "exists1"
				},
				{
					"name": "Update"
				},
				{
					"name": "existsInsert"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmpCode as integer,",
				"          EmpFName as string,",
				"          EmpLName as string,",
				"          Job as string,",
				"          Manager as string,",
				"          HireDate as date,",
				"          Salary as integer,",
				"          Commission as integer,",
				"          DEPTCODE as integer,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          EFStartDate as timestamp,",
				"          EFEndDate as timestamp,",
				"          IsActive as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select * from [dbo].[EMPLOYEE_SRC]',",
				"     format: 'query') ~> sourceEMP",
				"source(output(",
				"          EmpCode as integer,",
				"          EmpFName as string,",
				"          EmpLName as string,",
				"          Job as string,",
				"          Manager as string,",
				"          HireDate as date,",
				"          Salary as integer,",
				"          Commission as integer,",
				"          DEPTCODE as integer,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          EFStartDate as timestamp,",
				"          EFEndDate as timestamp,",
				"          IsActive as string,",
				"          EMPSK as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select * from [dbo].[EMPLOYEE]',",
				"     format: 'query') ~> target",
				"source(output(",
				"          maxsk as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select isnull(max(EMPSK),0)as maxsk from [dbo].[EMPLOYEE]',",
				"     format: 'query') ~> maxsk",
				"sourceEMP, target exists(sourceEMP@EmpFName == target@EmpFName",
				"     && sourceEMP@EmpLName == target@EmpLName",
				"     && sourceEMP@Job == target@Job",
				"     && sourceEMP@Manager == target@Manager",
				"     && sourceEMP@HireDate == target@HireDate",
				"     && sourceEMP@Salary == target@Salary",
				"     && sourceEMP@Commission == target@Commission",
				"     && sourceEMP@DEPTCODE == target@DEPTCODE",
				"     && sourceEMP@CreatedDate == target@CreatedDate",
				"     && sourceEMP@ModifiedDate == target@ModifiedDate",
				"     && sourceEMP@EFStartDate == target@EFStartDate",
				"     && sourceEMP@EFEndDate == target@EFEndDate,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1, target exists(sourceEMP@EmpCode == target@EmpCode,",
				"     negate:false,",
				"     broadcast: 'auto')~> Update",
				"sourceEMP, target exists(sourceEMP@EmpCode == target@EmpCode,",
				"     negate:true,",
				"     broadcast: 'auto')~> existsInsert",
				"existsInsert derive(createddate = currentTimestamp(),",
				"          ModifiedDate = currentTimestamp()) ~> derivedColumn1",
				"derivedColumn1 keyGenerate(output(sk as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1, maxsk join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1"
			]
		}
	}
}